<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aula</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4Q6Gf2aSP4eDXB8Miphtr37CMZZQ5oXLH2yaXMJ2w8e2ZtHTl7GptT4jmndRuHDT" crossorigin="anonymous">

    <!-- Adicionando bibliotecas React -->
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>

    <!-- Transpiler BABEL -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>
<body class="bg-light">
    <div class="container py-5">
        <div id="root"></div>
    </div>

    <script type="text/babel">
        const { useState } = React;

        function App() {
            // Estado para armazenar a lista de tarefas.
            const [tasks, setTasks] = useState([
                { id: 1, text: 'Aula de React' },
                { id: 2, text: 'Construir um projeto com Bootstrap' },
                { id: 3, text: 'Praticar mais' }
            ]);

            // Estado para o valor do input
            const [inputValue, setInputValue] = useState('');

            const handleAddTask = (e) => {
                e.preventDefault();
                if (inputValue.trim() === '') {
                    alert("Por favor, digite uma tarefa.");
                    return;
                }
    
                const newTask = {
                    id: Date.now(),
                    text: inputValue
                };
    
                setTasks([...tasks, newTask]);
                setInputValue('');
            };
    
            const handleRemoveTask = (idToRemove) => {
                const updatedTasks = tasks.filter(task => task.id !== idToRemove);
                setTasks(updatedTasks);
            };
    
            return (
                <div className="row justify-content-center">
                    <div className="col-lg-6">
                        <div className="card shadow-sm">
                            <div className="card-body p-4">
                                <h1 className="card-title text-center h2 mb-4">
                                    Lista de Tarefas                    
                                </h1>
    
                                {/* Formul√°rio para adicionar novas tarefas */}
                                <form onSubmit={handleAddTask} className="mb-4">
                                    <div className="input-group">
                                        <input type="text" value={inputValue} onChange={(e) => setInputValue(e.target.value)} placeholder="Adicionar nova tarefa..." className="form-control form-control-lg"/>
                                        <button type="submit" className="btn btn-primary">
                                            Adicionar
                                        </button>
                                    </div>
                                </form>

                                {/* Lista de tarefas */}
                                <ul className="list-group">
                                    {tasks.length > 0 ? (
                                        tasks.map(task => (
                                            <TodoItem key={task.id} task={task} onRemove={handleRemoveTask}/>
                                        ))
                                    ) : (
                                        <p className="text-center text-muted">Nenhuma tarefa na lista. Adicione uma!</p>
                                    )}    
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            );
        }

        function TodoItem({ task, onRemove }) {
            return (
                <li className="list-group-item d-flex justify-content-between align-items-center">
                    <span>{task.text}</span>
                    <button onClick={() => onRemove(task.id)} className="btn btn-sm btn-outline-danger" title="Remover tarefa">
                        &times;
                    </button>
                </li>
            );
        }

        const container = document.getElementById('root');
        const root = ReactDOM.createRoot(container);
        root.render(<App />);

    </script>
</body>
</html>
